{"version":3,"sources":["user.js","header.js","product.js","itemlist.js","home.js","customer.js","book.js","project.js","state.js","state2.js","state3.js","assaignment.js","api1.js","api2.js","api3.js","crud.js","myitem.js","hook1.js","hook2.js","hook3.js","hook0.js","hook00.js","hook4.js","param.js","hook5.js","validation.js","login.js","App.js","reportWebVitals.js","index.js"],"names":["user","UserList","align","length","cellpadding","map","xuser","index","logout","localStorage","clear","window","location","reload","Myheader","id","to","className","onClick","getItem","itemlist","name","price","qty","Myproduct","width","border","bgcolor","item","itemindex","Itemlist","props","this","itemname","quantity","supplier","Component","Myhome","Customer","state","xitem","color","size","xprice","Mybook","Projectlist","myproject","cost","client","row","Stateone","processInput","myobj","setState","loc","target","value","type","onChange","Statetwo","save","citylist","concat","xcity","Statethree","saveitem","newitem","newname","newprice","newqty","message","processname","nameobj","processprice","priceobj","processqty","qtyobj","deleteitem","splice","colspan","bind","Example","objname","objprice","abc","just","xname","Apione","getdata","axios","get","then","response","productlist","data","vendor","Apitwo","getuser","userlist","userinfo","src","photo","Apithree","getcity","cityinfo","Crud","datalist","obj","processmobile","mobile","processemail","email","input","FormData","append","post","deleterecord","recordid","status","postdate","Myitem","getproduct","Hookone","useState","counter","updateCounter","updateMessage","Hooktwo","updateItem","delitem","processitem","age","Hookthree","updateuser","fullname","mobileno","processage","updatemessage","deluser","newuser","Hookzero","updateitem","itemprice","Exam","xyz","User","city","pic","Hookfour","useParams","valign","rowspan","height","Param","idd","defaultitem","Hookfive","updatecity","updateproduct","useEffect","fetch","json","result","proid","xpro","Formvalidate","processinput","fields","preventDefault","errors","formstatus","test","alert","method","onSubmit","nameerror","mobileerror","emailerror","cityerror","addresserror","colSpan","Login","btnsts","pass","password","setItem","accountlist","passworderror","disabled","App","exact","path","component","Mycustomer","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a181eb92.chunk.js","sourcesContent":["import React from 'react';\r\nconst user = [\"sai\", \"pavan\", \"kartik\", \"anand\", \"gopal\"];\r\n\r\n\r\nfunction UserList() {\r\n    return (\r\n        <div>\r\n            <h1 align=\"center\"> Total users are:{user.length}</h1>\r\n            <table align=\"center\" cellpadding=\"10\">\r\n                <thead>\r\n                    <tr>\r\n                        <th> Sl no</th>\r\n                        <th> Full Name</th>\r\n                        <th> Action</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        user.map((xuser, index) => {\r\n                            return (<tr key={index}>\r\n                                <td>{index + 1}</td>\r\n                                <td>{xuser}</td>\r\n                                <td>---delete---</td>\r\n                            </tr>\r\n                            )\r\n                        })\r\n                    }\r\n                </tbody>\r\n\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\nexport default UserList;\r\n","import React from 'react';\r\nimport{Link} from 'react-router-dom';\r\nconst Myheader =()=>{\r\n    return(\r\n        <section>\r\n            <ul id=\"topnav\">\r\n                <li> <Link to=\"/\" className=\"mylink\">Home</Link> </li>\r\n                <li> <Link to=\"/user\" className=\"mylink\" >User</Link> </li>\r\n                <li> <Link to=\"/product\" className=\"mylink\">Product</Link> </li>\r\n                <li> <Link to=\"/customer\" className=\"mylink\">Customer</Link> </li>\r\n                <li> <Link to=\"/book\" className=\"mylink\">Books</Link> </li>\r\n                <li> <Link to=\"/project\" className=\"mylink\">Projects</Link> </li>\r\n                <li> <Link to=\"/state\" className=\"mylink\">State</Link> </li>\r\n                <li> <Link to=\"/state2\" className=\"mylink\">State-2</Link> </li>\r\n                <li> <Link to=\"/state3\" className=\"mylink\">State-3</Link> </li>\r\n                <li> <Link to=\"/assaignment\" className=\"mylink\">Example </Link> </li>\r\n                <li> <Link to=\"/api1\" className=\"mylink\">Api </Link> </li>\r\n                <li> <Link to=\"/api2\" className=\"mylink\">Api-2 </Link> </li>\r\n                <li> <Link to=\"/api3\" className=\"mylink\">Api-3 </Link> </li>\r\n                <li> <Link to=\"/crud\" className=\"mylink\">Crud </Link> </li>\r\n                <li> <Link to=\"/myitem\" className=\"mylink\">Props </Link> </li>\r\n                <li> <Link to=\"/hook1\" className=\"mylink\">Hook </Link> </li>\r\n                <li> <Link to=\"/hook2\" className=\"mylink\">Hook-2 </Link> </li>\r\n                <li> <Link to=\"/hook3\" className=\"mylink\">Hook-3 </Link> </li>\r\n                <li> <Link to=\"/hook0\" className=\"mylink\">Hook-0 </Link> </li>\r\n                <li> <Link to=\"/hook00\" className=\"mylink\">State-E </Link> </li>\r\n                <li> <Link to=\"/0/hook4\" className=\"mylink\">Hook-4 </Link> </li>\r\n                <li> <Link to=\"/1/param\" className=\"mylink\">Params-E </Link> </li>\r\n                <li> <Link to=\"/0/hook5\" className=\"mylink\">Hook-5 </Link> </li>\r\n                <li> <Link to=\"/validation\" className=\"mylink\">Form </Link> </li>\r\n                <li> <a className=\"mylinks\" onClick={logout}>Welcome-{localStorage.getItem(\"name\")} -Logout</a> </li>\r\n            </ul>\r\n        </section>\r\n    );\r\n\r\n}\r\nconst logout=()=>{\r\n    localStorage.clear();\r\n    window.location.reload();\r\n}\r\nexport default Myheader;","import React from 'react';\r\nconst itemlist=[\r\n    {name:\"apple\",price:20,qty:5},\r\n    {name:\"mango\",price:60,qty:15},\r\n    {name:\"banana\",price:50,qty:25},\r\n    {name:\"orange\",price:40,qty:35},\r\n    {name:\"milk\",price:30,qty:45}\r\n\r\n];\r\nconst Myproduct = () => {\r\n    return (\r\n        <section>\r\n            <h1 align=\"center\"> Available Products are-:{itemlist.length}\r\n            </h1>\r\n            <table align=\"center\" cellpadding=\"15\" width=\"80%\" border=\"1\">\r\n                <thead>\r\n                    <tr bgcolor=\"pink\">\r\n                        <th>Product Id</th>\r\n                        <th>Product Name</th>\r\n                        <th>Price</th>\r\n                        <th>Quantity</th>\r\n\r\n                    </tr>\r\n                    </thead>\r\n\r\n                    <tfoot>\r\n                    <tr bgcolor=\"skyblue\">\r\n                        <th>Product Id</th>\r\n                        <th>Product Name</th>\r\n                        <th>Price</th>\r\n                        <th>Quantity</th>\r\n\r\n                    </tr>\r\n                        </tfoot>\r\n                        <tbody>\r\n                            {\r\n                            itemlist.map((item,itemindex)=>{\r\n                                return(\r\n                                    <tr key={itemindex} align=\"center\">\r\n                                        <td>{itemindex+1}</td>\r\n                                        <td>{item.name}</td>\r\n                                        <td>{item.price}</td>\r\n                                        <td>{item.qty}</td>\r\n                                        </tr>\r\n                                )\r\n                            })\r\n                            }\r\n                        </tbody>\r\n                    \r\n            </table>\r\n           \r\n        </section>\r\n    );\r\n\r\n}\r\nexport default Myproduct;","import React,{Component} from 'react';\r\nclass Itemlist extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        \r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"iteminfo\">\r\n                <h2>{this.props.itemname}</h2>\r\n                <p>price:{this.props.price}</p>\r\n                <p>Quantity:{this.props.quantity}</p>\r\n                <p>Supplier:{this.props.supplier}</p>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nexport default Itemlist;","import React from 'react';\r\nimport Itemlist from './itemlist';\r\nexport default function Myhome(){\r\n    return(\r\n        <section>\r\n            <h1 align=\"center\"> Welcome Home</h1>\r\n            <p> Home page is working as well</p>\r\n            <Itemlist\r\n                itemname=\"mobile\"\r\n                price=\"20000\"\r\n                quantity=\"5\"\r\n                supplier=\"samsung\"/>\r\n                <Itemlist\r\n                itemname=\"laptop\"\r\n                price=\"200000\"\r\n                quantity=\"10\"\r\n                supplier=\"dell\"/>\r\n\r\n            </section>\r\n    );\r\n}","import React, { Component } from 'react';\r\nclass Customer extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            item:[\"apple\",\"mouse\",\"mango\"],\r\n            price:[100,200,300]\r\n\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <section>\r\n                <h1>The Items are:{this.state.item.length}</h1>\r\n                {\r\n                    this.state.item.map((xitem,index)=>{\r\n                        return <p key={index}>{xitem}</p>\r\n                    })\r\n                }\r\n                <hr color=\"blue\" size=\"5\"/>\r\n                    {\r\n                        this.state.price.map((xprice,index)=>{\r\n                            return<p key={index}>{xprice}</p>\r\n                        })\r\n                    }\r\n               \r\n            </section>\r\n        )\r\n    }\r\n}\r\nexport default Customer;","import React from 'react';\r\nconst Mybook=()=>{\r\n    return( \r\n        <section>\r\n            <h2> Book page is woking</h2>\r\n            <p>  sds dfsd fsd f</p>\r\n            </section>\r\n    );\r\n}\r\nexport default Mybook;","import React, { Component } from 'react';\r\nclass Projectlist extends Component {\r\n    myproject = [];\r\n    constructor() {\r\n        super();\r\n        this.myproject = [\r\n            { name: \"Multi vendor ERP\", cost: 500000, client: \"TCS\" },\r\n            { name: \"CRM App\", cost: 600000, client: \"MPHASYS\" },\r\n            { name: \"Lead Management\", cost: 200000, client: \"WIPRO\" },\r\n            { name: \"BPO Time Management\", cost: 100000, client: \"INFOSYS\" },\r\n            { name: \"Lead Distribution System\", cost: 400000, client: \"LTI\" }\r\n\r\n        ];\r\n    }\r\n    render() {\r\n        return (\r\n            <section>\r\n                <h1 align=\"center\">Project List:{this.myproject.length}</h1>\r\n                <p align=\"center\">Available projects in Application</p>\r\n                <table align=\"center\" cellpadding=\"20\">\r\n                    <tr bgcolor=\"red\">\r\n                        <th>Project Id</th>\r\n                        <th>Project Name</th>\r\n                        <th> Cost Of Project </th>\r\n                        <th>Client</th>\r\n                        <th>Order Status</th>\r\n                    </tr>\r\n                    {\r\n                        this.myproject.map((row,index)=>{\r\n                            return(\r\n                                <tr key={index} align=\"center\">\r\n                                    <td>{index+1}</td>\r\n                                    <td>{row.name}</td>\r\n                                    <td>{row.cost}</td>\r\n                                    <td>{row.client}</td>\r\n                                    <td>Sold Out</td>\r\n                                </tr>\r\n                            )\r\n                        })\r\n                    }\r\n\r\n                </table>\r\n            </section>\r\n\r\n        )\r\n    }\r\n\r\n}\r\nexport default Projectlist;","import React,{ Component} from 'react';\r\nclass Stateone extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            loc:\"banglore\"\r\n        }\r\n    }\r\n    processInput=(myobj)=>{  \r\n        this.setState({\r\n            loc: myobj.target.value\r\n        })\r\n\r\n        \r\n    }\r\n   \r\n    render(){\r\n        return(\r\n        <div className=\"center\">\r\n            <h2>State Management in class component</h2>\r\n            <h1>The city Name is:{this.state.loc}</h1>\r\n            <p>\r\n                Change: <input type=\"text\" onChange={this.processInput}value={this.state.loc}/>\r\n            </p>\r\n            \r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Stateone;","import React,{ Component} from 'react';\r\nclass Statetwo extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            loc:\"banglore\",\r\n            citylist:[\"pune\",\"mumbai\",\"kolkata\",\"chennai\"]\r\n        }\r\n    }\r\n    processInput=(myobj)=>{  \r\n        this.setState({\r\n            loc: myobj.target.value\r\n        })\r\n\r\n        \r\n    }\r\n    save=()=>{\r\n        this.setState({\r\n            citylist:this.state.citylist.concat(this.state.loc),\r\n            loc:\"\"\r\n        })\r\n    }\r\n   \r\n    render(){\r\n        return(\r\n        <div className=\"center\">\r\n            <h2>Array Handling using State</h2>\r\n            <h1>The city Name is:{this.state.loc}</h1>\r\n            <p>\r\n                Change: <input type=\"text\" onChange={this.processInput}\r\n                value={this.state.loc}/>\r\n                <button onClick={this.save}>Save Location</button>\r\n            </p>\r\n            <table align=\"center\" cellpadding=\"10\">\r\n                <tr>\r\n                    <th>City Id</th>\r\n                    <th>City name</th>\r\n                </tr>\r\n                {\r\n                    this.state.citylist.map((xcity,index)=>{\r\n                        return(\r\n                            <tr>\r\n                                <td>{index+1}</td>\r\n                                <td>{xcity}</td>\r\n                            </tr>\r\n                        )\r\n                    })\r\n                }\r\n                </table>\r\n            \r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Statetwo;","import React, { Component } from 'react';\r\nclass Statethree extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            item: [\r\n                { name: \"apple\", price: 290, qty: 8 },\r\n                { name: \"mango\", price: 200, qty: 5 },\r\n                { name: \"banana\", price: 390, qty: 4 }\r\n\r\n            ],\r\n            newname: \"\",\r\n            newprice: 0,\r\n            newqty: 0,\r\n            message: ''\r\n        }\r\n    }\r\n    saveitem = () => {\r\n        let newitem = {\r\n            name: this.state.newname,\r\n            price: this.state.newprice,\r\n            qty: this.state.newqty,\r\n\r\n        };\r\n        this.setState({\r\n            item: this.state.item.concat(newitem),\r\n            message: this.state.newname + \"added Successfully !\",\r\n            newname: \"\",\r\n            newprice: \"\",\r\n            newqty: \"\",\r\n\r\n        })\r\n\r\n    }\r\n    processname = (nameobj) => {\r\n        this.setState({\r\n            newname: nameobj.target.value,\r\n            message: \"item name is processing..\"\r\n        })\r\n\r\n    }\r\n    processprice = (priceobj) => {\r\n        this.setState({\r\n            newprice: priceobj.target.value,\r\n            message: \"item price is processing..\"\r\n        })\r\n\r\n    }\r\n    processqty = (qtyobj) => {\r\n        this.setState({\r\n            newqty: qtyobj.target.value,\r\n            message: \"item qty is processing..\"\r\n        })\r\n\r\n    }\r\n    deleteitem = (itemindex) => {\r\n        this.state.item.splice(itemindex,1);\r\n        this.setState({\r\n            item:this.state.item,\r\n            message:\"Element removed successfully\"\r\n        })\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h3 align=\"center\">{this.state.item.length}--Multi dimensional array using state</h3>\r\n\r\n                <p align=\"center\">{this.state.message}</p>\r\n\r\n                <table align=\"left\" cellpadding=\"10\">\r\n                    <tr>\r\n                        <th>Item Name</th>\r\n                        <td><input type=\"text\" onChange={this.processname}\r\n                            value={this.state.newname} /></td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                        <th>Item Price</th>\r\n                        <td><input type=\"text\" onChange={this.processprice}\r\n                            value={this.state.newprice} /></td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                        <th>Item Quantity</th>\r\n                        <td><input type=\"text\" onChange={this.processqty} value={this.state.newqty} /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th colspan=\"2\"><button onClick={this.saveitem}>Save Item</button></th>\r\n\r\n                    </tr>\r\n                </table>\r\n                <table align=\"right\" cellpadding=\"10\">\r\n                    <tr>\r\n                        <th>Sl</th>\r\n                        <th>Name</th>\r\n                        <th>Price</th>\r\n                        <th>Quantity</th>\r\n                        <th>Delete</th>\r\n                    </tr>\r\n                    {\r\n\r\n                        this.state.item.map((xitem, index) => {\r\n                            return (\r\n                                <tr key={index}>\r\n                                    <td>{index + 1}</td>\r\n                                    <td>{xitem.name}</td>\r\n                                    <td>{xitem.price}</td>\r\n                                    <td>{xitem.qty}</td>\r\n                                    <td>\r\n                                        <button onClick={this.deleteitem.bind(this, index)}>Delete</button>\r\n                                    </td>\r\n                                </tr>\r\n                            )\r\n                        })\r\n\r\n                    }\r\n\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Statethree;\r\n","import React, { Component } from 'react';\r\nclass Example extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            name: \"\",\r\n            price: \"\",\r\n            just:[]\r\n\r\n        }\r\n    }\r\n    \r\n    processname = (objname) => {\r\n        this.setState({\r\n            name: objname.target.value\r\n        })\r\n\r\n    }\r\n    processprice = (objprice) => {\r\n        this.setState({\r\n            price: objprice.target.value\r\n        })\r\n    }\r\n    save = () => {\r\n        let abc={\r\n            name:this.state.name,\r\n            price:this.state.price,\r\n            \r\n        }\r\n        this.setState({\r\n            just:this.state.just.concat(abc),\r\n            name:'',\r\n            price:''\r\n            \r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <h2 align=\"center\">This is Assaignment</h2>\r\n                <p align=\"center\"> Name:<input type=\"text\" onChange={this.processname} value={this.state.name}/>\r\n                   Price: <input type=\"text\" onChange={this.processprice} value={this.state.price}/>\r\n                    <button className=\"btn\" onClick={this.save}>Save</button></p>\r\n                {\r\n                    this.state.just.map((xname) => {\r\n                        return (\r\n                            <>\r\n                                <h3 className=\"space\">{xname.name}--{xname.price}</h3>\r\n                                \r\n\r\n                            </>\r\n                        )\r\n                    })\r\n                }\r\n\r\n\r\n\r\n            </section>\r\n        )\r\n    }\r\n}\r\nexport default Example;","import React,{Component} from 'react';\r\nimport axios from 'axios';\r\nclass Apione extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            productlist:[]\r\n        }\r\n\r\n    }\r\n    getdata=()=>{\r\n        axios.get(\"product.json\").then(response=>{\r\n            this.setState({\r\n                productlist:response.data\r\n            })\r\n        })\r\n    }\r\n    \r\n    render(){\r\n       \r\n        return(\r\n            <div className=\"container\">\r\n                <h3 align=\"center\">Read data from local json file using axios api</h3>\r\n                <h1 align=\"center\">Total products:{this.state.productlist.length}</h1>\r\n                <p align=\"center\"><button onClick={this.getdata}>Show myproduct</button></p>\r\n                <table align=\"center\" cellpadding=\"10\" border=\"1\">\r\n                    <tr>\r\n                        <th>Product id</th>\r\n                        <th>Product Name</th>\r\n                        <th>Product Price</th>\r\n                        <th>Product Qty</th>\r\n                        <th>Product Supplier</th>\r\n                    </tr>\r\n                    {\r\n                        this.state.productlist.map((row,index)=>{\r\n                            return(\r\n                                <tr key={index}>\r\n                                    <td>{index+1}</td>\r\n                                    <td>{row.name}</td>\r\n                                    <td>{row.price}</td>\r\n                                    <td>{row.qty}</td>\r\n                                    <td>{row.vendor}</td>\r\n                         </tr>\r\n                            )\r\n                        })\r\n                    }\r\n                </table>\r\n\r\n                </div>\r\n\r\n        )\r\n    }\r\n\r\n}\r\nexport default Apione;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nclass Apitwo extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            userlist: []\r\n        }\r\n\r\n    }\r\n    getuser = () => {\r\n        axios.get(\"user.json\").then(response => {\r\n            if (response.data.length > 0) {\r\n                this.setState({\r\n                    userlist: response.data\r\n                })\r\n\r\n            }\r\n        })\r\n    }\r\n    componentDidMount() {\r\n        this.getuser();\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <h2 align=\"center\">Available users:{this.state.userlist.length}</h2>\r\n                {\r\n                    this.state.userlist.map((userinfo,index)=>{\r\n                        return(\r\n                            <div className=\"userdetails\">\r\n                                <img src={userinfo.photo}/>\r\n                                <h4>{userinfo.name}</h4>\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Apitwo;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nclass Apithree extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            citylist: []\r\n        }\r\n\r\n    }\r\n    getcity = () => {\r\n        let url = \"https://www.firstenquiry.com/api/react/live/allcity.php\";\r\n        axios.get(url).then(response => {\r\n            if (response.data.length > 0) {\r\n                this.setState({\r\n                    citylist: response.data\r\n                })\r\n\r\n            }\r\n        })\r\n    }\r\n    componentDidMount() {\r\n        this.getcity();\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <h2 align=\"center\">Available users:{this.state.citylist.length}</h2>\r\n                {\r\n                    this.state.citylist.map((cityinfo, index) => {\r\n                        return (\r\n                            <p className=\"city\" key={index}>{cityinfo.name}--{cityinfo.name.length} Chars</p>\r\n\r\n                        )\r\n                    })\r\n                }\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Apithree;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nclass Crud extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            datalist: [],\r\n            name:\"\",\r\n            email:\"\",\r\n            mobile:\"\",\r\n            message:\"please fill the form ! \"\r\n\r\n        }\r\n\r\n    }\r\n    getdata = () => {\r\n        let url = \"https://www.firstenquiry.com/api/react/crud/list.php\";\r\n        axios.get(url).then(response => {\r\n            if (response.data.length > 0) {\r\n                this.setState({\r\n                    datalist: response.data\r\n                })\r\n            }\r\n        })\r\n    }\r\n    componentDidMount() {\r\n        this.getdata();\r\n    }\r\n    processname=(obj)=>{\r\n        this.setState({\r\n            name:obj.target.value\r\n        })\r\n    }\r\n    processmobile=(obj)=>{\r\n        this.setState({\r\n            mobile:obj.target.value\r\n        })\r\n    }\r\n    processemail=(obj)=>{\r\n        this.setState({\r\n            email:obj.target.value\r\n        })\r\n    }\r\n    save=()=>{\r\n        this.setState({\r\n            message:\"please wait...\"\r\n        })\r\n        let url=\"https://www.firstenquiry.com/api/react/crud/save.php\";\r\n        let input=new FormData();\r\n        input.append(\"name\",this.state.name);\r\n        input.append(\"email\",this.state.email);\r\n        input.append(\"mobile\",this.state.mobile);\r\n        axios.post(url,input).then(response=>{\r\n            this.setState({\r\n                message:response.data,\r\n                name:\"\",\r\n                email:\"\",\r\n                mobile:\"\",\r\n                datalist:[]\r\n                \r\n            })\r\n            this.getdata();// to reload the data after saving\r\n        })\r\n       \r\n    }\r\n    deleterecord=(recordid)=>{\r\n        let url=\"https://www.firstenquiry.com/api/react/crud/delete.php\";\r\n        let input = new FormData();\r\n        input.append(\"id\",recordid);\r\n        axios.post(url,input).then(response=>{\r\n            this.setState({\r\n                message:response.data.status,\r\n                datalist:[]\r\n            })\r\n            this.getdata();\r\n        })\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <h2 align=\"center\">CRUD -create read update delete--{this.state.datalist.length}</h2>\r\n                \r\n                <table align=\"center\" cellpadding=\"10\">\r\n                    <tbody>\r\n                    <tr>\r\n                        <td>\r\n                            Name:<br />\r\n                            <input type=\"text\" onChange={this.processname} value={this.state.name}/>\r\n                        </td>\r\n                        <td>\r\n                            Mobile:<br />\r\n                            <input type=\"text\" onChange={this.processmobile} value={this.state.mobile}/>\r\n                        </td>\r\n                        <td>\r\n                            E-mail:<br />\r\n                            <input type=\"text\" onChange={this.processemail} value={this.state.email}/>\r\n                        </td>\r\n\r\n                        <td><br /><button onClick={this.save}>send message</button></td>\r\n                    </tr>\r\n                    </tbody>\r\n                \r\n                </table>\r\n                <p align=\"center\">{this.state.message}</p>\r\n                <table align=\"center\" cellpadding=\"10\">\r\n                    <tbody>\r\n                    <tr>\r\n                        \r\n                        <th>Id</th>\r\n                        <th>Name</th>\r\n                        <th>Mobile</th>\r\n                        <th>E-mail</th>\r\n                        <th>Postdate</th>\r\n                        <th>Delete</th>\r\n                    </tr>\r\n                    {\r\n                        this.state.datalist.map((xuser, index) => {\r\n                            return (\r\n                                <tr key={index}>\r\n                                    <td>{xuser.id}</td>\r\n                                    <td>{xuser.name}</td>\r\n                                    <td>{xuser.mobile}</td>\r\n                                    <td>{xuser.email}</td>\r\n                                    <td>{xuser.postdate}</td>\r\n                                    <td> <button onClick={this.deleterecord(this,xuser.id)}>Delete</button></td>\r\n                                </tr>\r\n                            )\r\n                        })\r\n                    }\r\n                    </tbody>\r\n\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Crud;","import React,{Component} from 'react';\r\nimport Itemlist from './itemlist';\r\nimport axios from 'axios';\r\n\r\nclass Myitem extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            productlist:[]\r\n        }\r\n\r\n    }\r\n    getproduct=()=>{\r\n        axios.get(\"product.json\").then(response=>{\r\n            this.setState({\r\n                productlist:response.data\r\n            })\r\n        })\r\n    }\r\n    componentDidMount(){\r\n        this.getproduct();\r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"container\">\r\n                <h2 align=\"center\">Component Interaction,props,component re-use example</h2>\r\n                <h3 align=\"center\">All are:-{this.state.productlist.length} </h3>\r\n                {\r\n                    this.state.productlist.map((row,index)=>{\r\n                        return(\r\n                            <Itemlist\r\n                            key={index}\r\n                            itemname={row.name}\r\n                            price={row.price}\r\n                            quantity={row.qty}\r\n                            supplier={row.vendor}\r\n                            />\r\n\r\n                        )\r\n                    })\r\n                }\r\n                \r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Myitem;","import  React,{useState} from 'react';\r\nconst Hookone =()=>{\r\n    // const [var/array,functionname]=useState(initial val);\r\n    //const[currentval ,updated value]=useState(initial val);\r\n    const [counter,updateCounter]=useState(5);\r\n    const [message,updateMessage]=useState();\r\n    const one=()=>{\r\n        if(counter<100){\r\n\r\n        \r\n        updateCounter(counter + 5);\r\n        }else{\r\n            updateMessage(\"Sorry max is 100 You are out of range\");\r\n        }\r\n\r\n    }\r\n    const two=()=>{\r\n        updateCounter(counter - 5);\r\n        if(counter<=100){\r\n            updateMessage(\"\");\r\n\r\n        }\r\n    }\r\n    \r\n\r\n    return(\r\n        <section>\r\n            <h1 align=\"center\">Hook simple example</h1>\r\n            <h2 align=\"center\">The value is: {counter}</h2>\r\n            <br/>\r\n            <div align=\"center\">\r\n                <button onClick={one}>Increase by 5</button>\r\n                <button onClick={two}>Decrease by 5</button>\r\n            </div>\r\n            <p align=\"center\">{message}</p>\r\n            </section>\r\n    )\r\n}\r\nexport default Hookone;","import React, { useState } from 'react';\r\nconst Hooktwo = () => {\r\n    const [item, updateItem] = useState([\"apple\", \"mango\", \"banana\", \"orange\"]);\r\n    const [message, updateMessage] = useState();\r\n    const delitem = (index) => {\r\n        updateMessage(item[index] + \" Removed from list !\");\r\n        item.splice(index, 1);\r\n        updateItem(item => [...item]);//to update available item in state \r\n\r\n    }\r\n    const [newitem, processitem] = useState();\r\n    const saveitem = () => {\r\n        updateItem(item => [...item, newitem]);\r\n        /*three dots represents spread oprarator it allows array which \r\n        can be iterating to be expanded in places where one or more function calls are expected.*/\r\n        updateMessage(newitem + \"Added in list\");\r\n        processitem(\"\");\r\n\r\n\r\n    }\r\n    return (\r\n        <section>\r\n            <h2 align=\"center\"> Single Dimensional Array Manipulation</h2>\r\n            <p align=\"center\">{message}</p>\r\n            <table align=\"left\" cellpadding=\"10\" bgcolor=\"pink\">\r\n                <tr>\r\n                    <th>New Item</th>\r\n                    <td><input type=\"text\" onChange={obj=>processitem(obj.target.value)}\r\n                    value={newitem}/></td>\r\n                </tr>\r\n                <tr>\r\n                    <th colspan=\"2\">\r\n                        <button onClick={saveitem}>save item</button>\r\n                        </th>\r\n                </tr>\r\n\r\n            </table>\r\n            <br />\r\n            <table align=\"right\" cellpadding=\"10\" border=\"1\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Item Index</th>\r\n                        <th>Item Name</th>\r\n                        <th>Action</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        item.map((xitem, index) => {\r\n                            return (\r\n                                <tr key={index}>\r\n                                    <td>{index + 1}</td>\r\n                                    <td>{xitem}</td>\r\n                                    <td><button onClick={delitem.bind(this, index)}>Delete</button>\r\n\r\n                                    </td>\r\n                                </tr>\r\n                            )\r\n                        })\r\n                    }\r\n                </tbody>\r\n            </table>\r\n        </section>\r\n    )\r\n}\r\nexport default Hooktwo;","import React,{useState} from 'react';\r\nconst user =[{name:\"Ramesh\",mobile:\"7896541232\",age:\"20 years\"}\r\n];\r\nconst Hookthree =()=>{\r\n    const[userlist,updateuser]=useState(user);\r\n    const[fullname,processname]=useState();\r\n    const[mobileno,processmobile]=useState();\r\n    const[age,processage]=useState();\r\n    const[message,updatemessage]=useState();\r\n    const save=()=>{\r\n        let newuser={name:fullname,mobile:mobileno,age:age};\r\n        updateuser(userlist=>[...userlist,newuser]);\r\n        processname(\"\");\r\n        processmobile(0);\r\n        processage(\"\");   \r\n        updatemessage(\"user info added successfully\") ;\r\n    }\r\n    const deluser=(index)=>{\r\n        userlist.splice(index,1);\r\n        updateuser(userlist=>[...userlist]);\r\n        updatemessage(\"user info deleted successfully\") ;\r\n    }\r\n    return(\r\n        <section>\r\n            <h2 align=\"center\">Multi dimensional array using hooks</h2>\r\n            <h2 align=\"center\">{message}</h2>\r\n            <table align=\"left\" cellpadding=\"10\">\r\n                <caption>Add User</caption>\r\n                <tr>\r\n                    <th>Name</th>\r\n                    <td><input type=\"text\" onChange={obj=>processname(obj.target.value)}\r\n                    value={fullname}/></td>\r\n                </tr>\r\n                <tr>\r\n                    <th>Mobile</th>\r\n                    <td><input type=\"number\"onChange={obj=>processmobile(obj.target.value)}\r\n                    value={mobileno}/></td>\r\n                </tr>\r\n                <tr>\r\n                    <th>Age</th>\r\n                    <td><input type=\"text\"onChange={obj=>processage(obj.target.value)}\r\n                    value={age}/></td>\r\n                </tr>\r\n                <tr>\r\n                    <th colspan=\"2\"><button onClick={save}>save</button></th>\r\n                    \r\n                </tr>\r\n            </table>\r\n            <table align=\"right\" cellpadding=\"15\" border=\"1\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Full Name</th>\r\n                        <th>Mobile</th>\r\n                        <th>Age</th>\r\n                        <th>Action</th>\r\n                    </tr>\r\n                </thead>\r\n                {\r\n                    userlist.map((xuser,index)=>{\r\n                        return(\r\n                            <tr key={index}>\r\n                                <td>{xuser.name}</td>\r\n                                <td>{xuser.mobile}</td>\r\n                                <td>{xuser.age}</td>\r\n                                <td><button onClick={deluser.bind(this,index)}>Delete</button></td>\r\n                                </tr>\r\n                        )\r\n                    })\r\n                }\r\n            </table>\r\n        </section>\r\n    )\r\n}\r\nexport default Hookthree;","import React,{useState} from 'react';\r\nconst item=[];\r\nconst Hookzero=()=>{\r\n    const[itemlist,updateitem]=useState(item);\r\n    const[itemname,processname]=useState();\r\n    const[itemprice,processprice]=useState();\r\n    const save=()=>{\r\n        let newitem={name:itemname,price:itemprice};\r\n        updateitem(itemlist=>[...itemlist,newitem]);\r\n        processname(\"\");\r\n        processprice(\"\");\r\n    }\r\n    return(\r\n        <section>\r\n            <h2 align=\"center\">hook example</h2>\r\n            <p align=\"center\">\r\n                Name:<input type=\"text\" onChange={obj=>processname(obj.target.value)}\r\n                value={itemname}/>\r\n                Price:<input type=\"text\" onChange={obj=>processprice(obj.target.value)}\r\n                value={itemprice}/> \r\n                <button onClick={save}> save</button>   \r\n            </p>\r\n            <div>\r\n                {\r\n                    itemlist.map((xitem,index)=>{\r\n                        return(\r\n                           <div className=\"div1\">\r\n                            <h3 className=\"par\">{xitem.name}\r\n                            <br/>{xitem.price}</h3>\r\n                            </div>\r\n                            \r\n                           \r\n                        \r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n            </section>\r\n    )\r\n}\r\nexport  default Hookzero;","import React,{Component} from 'react';\r\nclass Exam extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            name:\"\",\r\n            price:\"\",\r\n            just:[]\r\n\r\n        }\r\n    }\r\n    processname=(obj)=>{\r\n        this.setState({\r\n            name:obj.target.value\r\n        })\r\n        \r\n    }\r\n    processprice=(obj)=>{\r\n        this.setState({\r\n            price:obj.target.value\r\n        })\r\n    }\r\n    save=()=>{\r\n        let xyz={\r\n            name:this.state.name,\r\n            price:this.state.price\r\n        }\r\n        this.setState({\r\n            just:this.state.just.concat(xyz),\r\n            name:\"\",\r\n            price:\"\"\r\n\r\n        })\r\n\r\n    }\r\n    render(){\r\n        return(\r\n            <section>\r\n                <h2 align=\"center\">Class Component Example</h2>\r\n                <p align=\"center\">\r\n                    Name:<input type=\"text\"onChange={this.processname}value={this.state.name}/>\r\n                    Price:<input type=\"text\"onChange={this.processprice}value={this.state.price}/>\r\n                    <button onClick={this.save}>Save</button>\r\n                </p>\r\n                <div>\r\n                {\r\n                    this.state.just.map((xname,index)=>{\r\n                        return(\r\n                           <div className=\"div1\">\r\n                            <h3 className=\"par\">{xname.name}\r\n                            <br/>{xname.price}</h3>\r\n                            </div>\r\n                            \r\n                           \r\n                        \r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n                </section>\r\n        )\r\n    }\r\n}\r\nexport default Exam;","import React,{useState} from 'react';\r\nimport {useParams,Link} from 'react-router-dom';\r\nconst User=[\r\n    {name:\"Ramesh\",mobile:7896541236,city:\"Banglore\",age:\"30yrs\",pic:\"1.jpg\"},\r\n    {name:\"Ganesh\",mobile:7896545636,city:\"Chennai\",age:\"20yrs\",pic:\"2.jpg\"},\r\n    {name:\"Suresh\",mobile:78965478936,city:\"Hyderabad\",age:\"10yrs\",pic:\"1.jpg\"},\r\n    {name:\"Veeresh\",mobile:4596541236,city:\"Banglore\",age:\"23yrs\",pic:\"6.jpg\"},\r\n    {name:\"Vignesh\",mobile:126541236,city:\"Pune\",age:\"34yrs\",pic:\"2.jpg\"},\r\n    {name:\"Somesh\",mobile:7845691236,city:\"Mumbai\",age:\"10yrs\",pic:\"6.jpg\"}\r\n] ;\r\nconst Hookfour=()=>{\r\n    const[userlist,updateuser]=useState(User);\r\n    const{id}=useParams();\r\n    return(\r\n        <section>\r\n            <h2 align=\"center\">Use Params use to pass the data from url as query string</h2>\r\n            <h1 align=\"center\">The url value is:{id}</h1>\r\n            <div align=\"center\">\r\n            {\r\n                userlist.map((xuser,index)=>{\r\n                    return(\r\n                        \r\n                       \r\n                            <Link className=\"userinfo\" to={`/${index}/hook4`}>{xuser.name}</Link>\r\n                            \r\n                    ) \r\n\r\n                })\r\n            }\r\n            </div>\r\n            <br/>\r\n            <table align=\"center\" cellpadding=\"15\">\r\n                <caption> <h2> About {userlist[id].name}</h2></caption>\r\n                <tr valign=\"top\">\r\n                    <td rowspan=\"4\">\r\n                        <img src={userlist[id].pic} height=\"200\" width=\"200\"/>\r\n                    </td>\r\n                    <th>Full Name:</th> \r\n                    <td>{userlist[id].name}</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>Age:</th> <td>{userlist[id].age}</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>Mobile:</th> <td>{userlist[id].mobile}</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>City:</th> <td>{userlist[id].city}</td>\r\n                </tr>\r\n                </table>\r\n            </section>\r\n    )\r\n}\r\nexport default Hookfour;","import React,{useState} from 'react';\r\nimport {useParams,Link} from 'react-router-dom';\r\nconst item=[\r\n    {name:\"Apple\",price:100,qty:5,pic:\"1.jpg\"},\r\n    {name:\"Mango\",price:150,qty:10,pic:\"1.jpg\"},\r\n    {name:\"Orange\",price:400,qty:11,pic:\"1.jpg\"},\r\n    {name:\"Banana\",price:300,qty:15,pic:\"1.jpg\"},\r\n    {name:\"Sapota\",price:200,qty:25,pic:\"1.jpg\"}\r\n];\r\nconst Param=()=>{\r\n    const[itemlist]=useState(item);\r\n    const{idd}=useParams();\r\n\r\n    return(\r\n        <section>\r\n            <h2 align=\"center\">Use Params Example</h2>\r\n            <h3 align=\"center\">The item No of the list:{idd}</h3>\r\n            <div align=\"center\">\r\n                \r\n                {\r\n                    itemlist.map((xitem,index)=>{\r\n                        return(\r\n\r\n                           <Link className=\"userinfo\" to={`/${index}/param`}>{xitem.name}</Link>\r\n\r\n                        )\r\n                    })\r\n                }\r\n                </div>\r\n                <br/>\r\n                <table align=\"center\">\r\n                    <caption>About:{itemlist[idd].name}</caption>\r\n                    <tr valign=\"top\">\r\n                        <td rowspan=\"4\">\r\n                        <img src={itemlist[idd].pic}/>\r\n                            </td>\r\n                        </tr>\r\n                    <tr>\r\n                        <th>Item Name</th>\r\n                        <td>{itemlist[idd].name}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th>Item Price</th>\r\n                        <td>{itemlist[idd].price}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th>Item Quantity</th>\r\n                        <td>{itemlist[idd].qty}</td>\r\n                    </tr>\r\n                    </table>\r\n                \r\n            </section>\r\n            \r\n    )\r\n}\r\nexport default Param;","import  React ,{useState,useEffect} from 'react';\r\nimport {Link,useParams} from 'react-router-dom';\r\nconst defaultitem={\"name\":\"\",\"price\":\"\",\"qty\":\"\",\"vendor\":\"\"};\r\n\r\nconst Hookfive=()=>{\r\n    const[citylist,updatecity]=useState([]);\r\n    const[productlist,updateproduct]=useState([defaultitem]);\r\n\r\n    const getitem=()=>{\r\n        let url = \"product.json\";\r\n        fetch(url)\r\n        .then(response=>response.json())\r\n        .then(result=>updateproduct(result))\r\n\r\n    }\r\n    \r\n\r\n     const getcity=()=>{\r\n        let url = \"https://www.firstenquiry.com/api/react/live/allcity.php\";\r\n        fetch(url)\r\n        .then(response=>response.json())\r\n        .then(result=>updatecity(result))\r\n\r\n    }\r\n    useEffect(()=>{\r\n        getitem();\r\n       getcity();\r\n    \r\n    },[true])\r\n    const{proid}=useParams();\r\n    return(\r\n        <section>\r\n            <h2 align=\"center\">Use Effect to read data from local & server</h2>\r\n            <fieldset>\r\n                <legend>Available products-{productlist.length}</legend>\r\n                <br/>\r\n                {\r\n                    productlist.map((xpro,index)=>{\r\n                        return(\r\n                            <Link className=\"userinfo\" to={`/${index}/hook5`}>{xpro.name}</Link>\r\n                            \r\n                        )\r\n                    })\r\n                }\r\n                <br/><br/>\r\n                <table align=\"center\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Product Name</th>\r\n                            <td>{productlist[proid].name}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th>Product Price</th>\r\n                            <td>{productlist[proid].price}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th>Product Quantity</th>\r\n                            <td>{productlist[proid].qty}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th>Product supplier</th>\r\n                            <td>{productlist[proid].vendor}</td>\r\n                        </tr>\r\n                    </thead>\r\n                </table>\r\n            </fieldset>\r\n            <br/>\r\n            <br/>\r\n           \r\n            <fieldset>\r\n                <legend>Available City-{citylist.length}</legend>\r\n                {\r\n                    citylist.map((xcity,index)=>{\r\n                        return(\r\n                            <p className=\"city\" key={index}>{xcity.id}.{xcity.name}</p>\r\n                        )\r\n                    })\r\n                }\r\n            </fieldset>\r\n        </section>\r\n    )\r\n}\r\nexport default Hookfive;","import React, { Component } from 'react';\r\nclass Formvalidate extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            fields: {},\r\n            errors: {},\r\n            citylist:[\"banglore\",\"pune\",\"delhi\",\"chennai\",\"patna\",\"kolkata\"]\r\n        }\r\n    }\r\n    processinput = (obj) => {\r\n        let fields = this.state.fields;\r\n        fields[obj.target.name] = obj.target.value;\r\n        this.setState({\r\n            fields\r\n        })\r\n\r\n\r\n    }\r\n    save = (obj) => {\r\n        obj.preventDefault();\r\n        let errors = this.state.errors;\r\n        let fields = this.state.fields;\r\n        \r\n        let formstatus = true;\r\n        \r\n        if (!fields[\"fname\"]) {\r\n            formstatus = false;\r\n            errors[\"nameerror\"] = \"please enter your name\";\r\n\r\n        } else {\r\n            errors[\"nameerror\"] = \"\";\r\n        }\r\n        //mobile validation here\r\n        let mpattern=/^[6-9]\\d{9}$/;\r\n        if ( (!fields[\"mobile\"])|| (! mpattern.test(fields[\"mobile\"])) ) {\r\n            \r\n            formstatus = false;\r\n            errors[\"mobileerror\"] = \"please enter your mobile number\";\r\n\r\n        } else {\r\n            errors[\"mobileerror\"] = \"\";\r\n        }\r\n        //email validation\r\n        let epattern=/^([A-Za-z0-9_\\-\\.])+\\@([A-Za-z0-9_\\-\\.])+\\.([A-Za-z]{2,4})$/;;\r\n        if ((!fields[\"email\"])||( !epattern.test(fields[\"email\"]))) {\r\n            formstatus = false;\r\n            errors[\"emailerror\"] = \"please enter your email id\";\r\n\r\n        } else {\r\n            errors[\"emailerror\"] = \"\";\r\n        }\r\n\r\n        //city validation\r\n        if (!fields[\"city\"]) {\r\n            formstatus = false;\r\n            errors[\"cityerror\"] = \"please select city name\";\r\n\r\n        } else {\r\n            errors[\"cityerror\"] = \"\";\r\n        }\r\n        // Address validation\r\n        if ((!fields[\"address\"]) ||(fields[\"address\"].length<40)) {\r\n            formstatus = false;\r\n            errors[\"addresserror\"] = \"please enter your address min of 40 characters\";\r\n\r\n        } else {\r\n            errors[\"addresserror\"] = \"\";\r\n        }\r\n        \r\n\r\n        this.setState({\r\n            errors: errors\r\n        })\r\n        if (formstatus==true){\r\n            alert(\"please wait submiting to server\");\r\n        }\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <section>\r\n                <h2 align=\"center\">Form validation</h2>\r\n                <form method=\"POST\" onSubmit={this.save}>\r\n                    <table align=\"center\" cellpadding=\"10\">\r\n                        <tbody>\r\n                            <tr>\r\n                                <th>Full Name</th>\r\n                                <td>\r\n                                    <input type=\"text\" name=\"fname\" onChange={this.processinput} />\r\n                                    <i>{this.state.errors.nameerror}</i>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th>Mobile</th>\r\n                                <td>\r\n                                    <input type=\"text\" name=\"mobile\" onChange={this.processinput} />\r\n                                    <i>{this.state.errors.mobileerror}</i>\r\n                                </td>\r\n                            </tr>\r\n\r\n                            <tr>\r\n                                <th>Email</th>\r\n                                <td>\r\n                                    <input type=\"text\" name=\"email\" onChange={this.processinput} />\r\n                                    <i>{this.state.errors.emailerror}</i>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th>City</th>\r\n                                <td>\r\n                                    <select name=\"city\" onChange={this.processinput}>\r\n                                        <option value=\"\">Choose</option>\r\n                                        {\r\n                                            this.state.citylist.map((xcity)=>{\r\n                                                return(\r\n                                                    <option>{xcity}</option>\r\n                                                )\r\n                                            })\r\n                                        }\r\n\r\n                                    </select>\r\n                                    <i>{this.state.errors.cityerror}</i>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th>Address</th>\r\n                                <td>\r\n                                <textarea name=\"address\" onChange={this.processinput}></textarea>\r\n                                <i>{this.state.errors.addresserror}</i>\r\n                                </td>\r\n                            </tr>\r\n\r\n                            <tr>\r\n                                <th colSpan=\"2\"><button onClick={this.save}>Submit</button></th>\r\n\r\n                            </tr>\r\n\r\n\r\n                        </tbody>\r\n                    </table>\r\n                </form>\r\n            </section>\r\n        );\r\n    }\r\n}\r\nexport default Formvalidate;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nclass Login extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            fields: {},\r\n            errors: {},\r\n            message:\"\",\r\n            accountlist:[],\r\n            btnsts:false\r\n            \r\n        }\r\n    }\r\n    processinput = (obj) => {\r\n        let fields = this.state.fields;\r\n        fields[obj.target.name] = obj.target.value;\r\n        this.setState({\r\n            fields\r\n        })\r\n\r\n\r\n    }\r\n    save = (obj) => {\r\n        obj.preventDefault();\r\n        let errors = this.state.errors;\r\n        let fields = this.state.fields;\r\n        \r\n        let formstatus = true;\r\n        \r\n        if (!fields[\"password\"]) {\r\n            formstatus = false;\r\n            errors[\"passworderror\"] = \"please enter your password\";\r\n\r\n        } else {\r\n            errors[\"passworderror\"] = \"\";\r\n        }\r\n       \r\n        //email validation\r\n        let epattern=/^([A-Za-z0-9_\\-\\.])+\\@([A-Za-z0-9_\\-\\.])+\\.([A-Za-z]{2,4})$/;;\r\n        if ((!fields[\"email\"])||( !epattern.test(fields[\"email\"]))) {\r\n            formstatus = false;\r\n            errors[\"emailerror\"] = \"please enter your email id\";\r\n\r\n        } else {\r\n            errors[\"emailerror\"] = \"\";\r\n        }\r\n\r\n        \r\n        \r\n\r\n        this.setState({ \r\n            errors: errors\r\n        })\r\n        if (formstatus==true){\r\n            this.setState({\r\n                message:\"please wait processing...\",\r\n                btnsts:true\r\n\r\n            })\r\n            let status=false;\r\n            let email = this.state.fields[\"email\"];\r\n            let pass = this.state.fields[\"password\"];\r\n            axios.get(\"account.json\").then(response=>{\r\n                if(response.data.length>0){\r\n                    response.data.map(xuser=>{\r\n                        if( (xuser.email==email)&&(xuser.password==pass) ){\r\n                            status=true;\r\n                            localStorage.setItem(\"userid\",xuser.id);\r\n                            localStorage.setItem(\"name\",xuser.name);\r\n                            window.location.reload();\r\n                            //break;\r\n                            \r\n\r\n                        }\r\n                        \r\n                    }) // end of map loop\r\n                    if(status==false){\r\n                        this.setState({\r\n                            message:\"Fail: Invalid details or not exists !\",\r\n                            btnsts:false\r\n            \r\n                        })\r\n                        \r\n                    }\r\n                }\r\n            })\r\n\r\n\r\n           \r\n\r\n        }\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <section>\r\n                <h2 align=\"center\">Login</h2>\r\n                <p align=\"center\">{this.state.message}</p>\r\n                <form method=\"POST\" onSubmit={this.save}>\r\n                    <table align=\"center\" cellpadding=\"10\">\r\n                        <tbody>\r\n                            \r\n                            \r\n\r\n                            <tr>\r\n                                <th>Email</th>\r\n                                <td>\r\n                                    <input type=\"text\" name=\"email\" onChange={this.processinput} />\r\n                                    <i>{this.state.errors.emailerror}</i>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th>Password</th>\r\n                                <td>\r\n                                    <input type=\"password\" name=\"password\" onChange={this.processinput} />\r\n                                    <i>{this.state.errors.passworderror}</i>\r\n                                </td>\r\n                            </tr>\r\n                            \r\n\r\n                            <tr>\r\n                                <th colSpan=\"2\"><button disabled={this.state.btnsts}>Login</button></th>\r\n\r\n                            </tr>\r\n\r\n\r\n                        </tbody>\r\n                    </table>\r\n                </form>\r\n            </section>\r\n        );\r\n    }\r\n}\r\nexport default Login;","import React from 'react';\nimport { HashRouter, Route } from 'react-router-dom';\nimport UserList from './user';\nimport Myheader from './header';\nimport Myproduct from './product';\nimport Myhome from './home';\nimport Mycustomer from './customer';\nimport Mybook from './book';\nimport Projectlist from './project';\nimport Stateone from './state';\nimport Statetwo from './state2';\nimport Statethree from './state3';\nimport Example from './assaignment';\nimport Apione from './api1';\nimport Apitwo from './api2';\nimport Apithree from './api3';\nimport Crud from './crud';\nimport Myitem from './myitem';\nimport Hookone from './hook1';\nimport Hooktwo from './hook2';\nimport Hookthree from './hook3';\nimport Hookzero from './hook0';\nimport Exam from './hook00';\nimport Hookfour from './hook4';\nimport Param from './param';\nimport Hookfive from './hook5';\nimport Formvalidate from './validation';\nimport Login from './login';\n\n\nfunction App() {\n  if(localStorage.getItem(\"userid\")==null){\n    return<Login />\n  }else{\n  return (\n    <HashRouter>\n      \n\n      <Myheader />\n      <Route exact path=\"/\" component={Myhome} />\n      <Route path=\"/user\" component={UserList} />\n      <Route path=\"/product\" component={Myproduct} />\n      <Route path=\"/customer\" component={Mycustomer} />\n      <Route path=\"/book\" component={Mybook} />\n      <Route path=\"/project\" component={Projectlist}/>\n      <Route path=\"/state\" component={Stateone}/>\n      <Route path=\"/state2\" component={Statetwo}/>\n      <Route path=\"/state3\" component={Statethree}/>\n      <Route path=\"/assaignment\" component={Example}/>\n      <Route path=\"/api1\" component={Apione}/>\n      <Route path=\"/api2\" component={Apitwo}/>\n      <Route path=\"/api3\" component={Apithree}/>\n      <Route path=\"/crud\" component={Crud}/>\n      <Route path=\"/myitem\" component={Myitem}/>\n      <Route path=\"/hook1\" component={Hookone}/>\n      <Route path=\"/hook2\" component={Hooktwo}/>\n      <Route path=\"/hook3\" component={Hookthree}/>\n      <Route path=\"/hook0\" component={Hookzero}/>\n      <Route path=\"/hook00\" component={Exam}/>\n      <Route path=\"/:id/hook4\" component={Hookfour}/>\n      <Route path=\"/:idd/param\" component={Param}/>\n      <Route path=\"/:proid/hook5\" component={Hookfive}/>\n      <Route path=\"/validation\" component={Formvalidate}/>\n\n    </HashRouter>\n  );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}